


PGF90 (Version    15.10)          03/16/2016  14:41:37      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir /opt/cray/mpt/7.3.1/gni/mpich-pgi/15.3/include
          -idir /opt/cray/rca/1.0.0-2.0502.60530.1.62.ari/include
          -idir /opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
          -idir /opt/cray/xpmem/0.1-2.0502.64982.5.3.ari/include
          -idir /opt/cray/gni-headers/4.0-1.0502.10859.7.8.ari/include
          -idir /opt/cray/pmi/5.0.10-1.0000.11050.0.0.ari/include
          -idir /opt/cray/ugni/6.0-1.0502.10863.8.29.ari/include
          -idir /opt/cray/udreg/2.3.2-1.0502.10518.2.17.ari/include
          -idir /opt/cray/papi/5.4.1.3/include
          -idir /opt/cray/wlm_detect/1.0-1.0502.64649.2.1.ari/include
          -idir /opt/cray/krca/1.0.0-2.0502.63139.4.31.ari/include
          -idir /opt/cray-hss-devel/7.2.0/include
          -inform warn -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard -extend  
          -symbol -noupcase    

Filename: declarations.f90

(    1) MODULE DECLARATION	
(    2) !--------------------------------------------------------------------------------------------------------------------------!
(    3) !HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH!
(    4) !_____________________________________________ START HEADER OF MODULE______________________________________________________!
(    5) !FUNCTION: IS TO COLLECT ALL THE GLOBAL VARIABLES, AND DATA TYPES OF THE CODE IN ONE MODULE
(    6) !////////////////////////////////////RESPONSIBLE TSOUTSANIS PANAGIOTIS/////////////////////////////////////////////////////! 
(    7) !**************************************LAST EDITED ON THE 12-02-2014*******************************************************!
(    8) !_____________________________________________ END HEADER OF MODULE________________________________________________________!
(    9) !--------------------------------------------------------------------------------------------------------------------------!
(   10) 
(   11) IMPLICIT NONE
(   12) 
(   13) !--------------------------------------------------------------------------------------------------------------------------!
(   14) !oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo!
(   15) !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! S.1.   INTEGER  VARIABLES HERE                  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
(   16) !oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo!
(   17) !--------------------------------------------------------------------------------------------------------------------------!
(   18) 
(   19) INTEGER::DIMENSIONA,nof_variables,dims,IRES_TURB,IRES_UNSTEADY,LAMPS,itotalb,totiw,number_of_dog,B_CODE,ICONS_S,ICONS_E,ICOMPACT,EES,iscoun,itold,lmach_style	!DIMENSIONS OF PROBLEM
(   20) integer::governingequations,guassianquadra,temporder,iboundary,wenocnschar,required,nodes_i,SWIRL,IADAPT,TECPLOT,STENCIL_IO,SURFSHEAR,ISSF,n_node,ELEM_DEC,n_boundaries,NUMBER_OF_NEI,FASTEST_Q,STATISTICS
(   21) INTEGER::KILL			  		!FLAG FOR KILLING A SIMULATION
(   22) INTEGER::NDERIVATIVE		  		!INDEX OF THE NUMBERING OF THE COMPONENT OF THE POLYNOMIALS 
(   23) INTEGER::IXXFF					!INTEGER TO BE PASSED IN ROUTINE FOR WRITING THE OUTPUT FILES
(   24) INTEGER::ICONSI					!INTEGER FOR CONSIDERED CELL
(   25) INTEGER::FACEX					!INDEX FOR IDENTIFYING WHICH FACE 
(   26) INTEGER::ICONSR					!INDEX FOR IDENTIFYING THE CONSIDERED ELEMENT 
(   27) INTEGER::IVGT					!INDEX FOR INVERTING MATRIX 
(   28) INTEGER::INWHICHEL				!INDEX FOR IDENTIFYING THE CONSIDERED ELEMENT WITHIN A STENCIL 
(   29) INTEGER::IXX					!INDEX FOR IDENTIFYING THE ELEMENT
(   30) INTEGER::JXX					!INDEX FOR IDENTIFYING THE ELEMENT OF THE STENCIL
(   31) INTEGER::KXX					!INDEX FOR IDENTIFYING THE DEGREE OF FREEDOM OF POLYNOMIALS
(   32) INTEGER::LXX					!INDEX FOR IDENTIFYING THE STENCIL 
(   33) INTEGER::ELTYPE					!INDEX FOR IDENTIFYING THE ELEMENT TYPE
(   34) INTEGER::LXX1					!INDEX FOR IDENTIFYING THE STENCIL 
(   35) INTEGER::NUMBER					!INDEX FOR THE NUMBER OF DEGREES OF FREEDOM
(   36) INTEGER::ICONSIDERED				!INDER FOR THE CONSIDERED CELL
(   37) INTEGER::SUBDIV					!INDEX FOR THE NUMBER OF SUBDIVISIONS OF A FACE
(   38) INTEGER::ICONSGVQ				!INDEX FOR CONSIDERED CELL
(   39) INTEGER::IGIANAGRAPS				!INDEX FOR CONSIDERED CELL
(   40) INTEGER::IT					!NUMBER OF ITERATIONS






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 2

(   41) INTEGER::ICONIMP				!INDEX FOR CONSIDERED CELL
(   42) INTEGER::IBCODE					!INDEX FOR BOUNDARY CONDITION CODE
(   43) INTEGER::IBSIDE					!INDEX FOR WHICH SIDE OF CELL IS BOUNDED
(   44) INTEGER::CFW					!INDEX FOR DETERMINING FROM THE WHICH SECTION THE BOUNDARY SUBROUTINE IS CALLED
(   45) INTEGER::LOWMEMORY				!MEMORY USAGE FLAG
(   46) INTEGER::FASTEST				!FASTEST MODE FLAG FOR THE CODE
(   47) INTEGER::EMETIS					!TYPE OF METIS PARTITIONING
(   48) INTEGER::ALLNODESGLOBALL			!TOTAL NUMBER OF NODES IN THE DOMAIN
(   49) INTEGER::SPATILADISCRET				!SPATIAL DISCRETISATION
(   50) INTEGER::SPATIALORDER    			!SPATIAL ORDER
(   51) INTEGER::JK					!INDEX
(   52) INTEGER::NUMNEIGHBOURS				!NUMBER OF NEIGHBOURS IN THE STENCILS EVENTUALLY WILL BE LOCAL
(   53) INTEGER::RESTART				!FLAG FOR DETERMINING IF A RESTART FILE IS PRESENT			
(   54) INTEGER::IHYBRID				!HYBRID MODE WHERE SOME PART OF THE DOMAIN IS SOLVED WITH LOWER ORDER AND ANOTHER WITH HIGHER ORDER SCHEMES				!
(   55) INTEGER::RESIDUALFREQ				!FREQUENCY FOR WRITING THE RESIDUALS
(   56) INTEGER::IRS					!IMPLICIT RESIDUAL SMOOTHING VERSION
(   57) INTEGER::GREENGO				!GRADIENT APPROXIMATION TECHNIQUES
(   58) INTEGER::LMACH					!LOW MACH PRECONDITIONING
(   59) INTEGER::ISPAL					!TYPE OF SPALART ALLMARAS MODIFICATION	
(   60) INTEGER::RELAX					!RELAXATION SCHEMES GAUSS SEIDEL, JACOBIAN ETC
(   61) INTEGER::ICONG					!INDEX FOR CONSIDERED CELL
(   62) INTEGER::ILOOP					!INDEX FOR CONSIDERED CELL
(   63) INTEGER::CFLRAMP				!CFL RAMPING ACTIVATED FOR IMPLICIT TIME STEPPING
(   64) INTEGER::IBFC					!FARFIELD DETERMINING FLAG SUPERSONIC SUBSONIC
(   65) INTEGER::AVERAGING				!FLAG FOR ACTIVATING AVERAGING OF TRANSIENT DATA
(   66) INTEGER::AVERAGE_RESTART			!FLAG FOR HAVING A RESTART FILE WITH THE AVERAGED SOLUTION
(   67) INTEGER::PREV_TURBMODEL				!FLAG OF PREVIOUS TURBULENCE MODEL IN CASE OF A RESTART FILE
(   68) INTEGER::IFORCE					!INDEX ON HOW OFTEN TO COMPUTE THE FORCES
(   69) INTEGER::BOUNDTYPE				!TYPE OF BOUNDARY CONDITION SUPERSONIC,  SUBSONIC
(   70) ! INTEGER::RANK					
(   71) ! INTEGER::RC
(   72) INTEGER::NPROC					!NUMBER OF CPUS							
(   73) INTEGER::INITCOND				!INITIAL CONDITION TYPE
(   74) INTEGER::WENWRT					!WENO WRT TO WHICH VARIABLE CONSERVED, CHARACTERISTICS ETC
(   75) INTEGER::POLY					!INTERPOLATING POLYNOMIALS 1 GENERIC, 2 LEGENDRE
(   76) INTEGER::IVORTEX				!Q CRITERION COM PUTATION
(   77) INTEGER::ICARLOS1				!INDEX FOR CONSIDERED ELEMENT PASSIVE SCALARS, COMPLICATED INFLOW CONDITION
(   78) INTEGER::ICARLOS2				!INDEX FOR CONSIDERED FACE PASSIVE SCALARS, COMPLICATED INFLOW CONDITION
(   79) INTEGER::IMAXE					!TOTAL NUMBER OF ELEMENTS OF THE GRID
(   80) INTEGER::NTMAX					!MAXIMUM NUMBER OF ITERATIONS
(   81) INTEGER::IHAX1					!TEMPORARY INTEGER USED AS POINTER FOR OPERATIONS REGARDING HEXAHEDRAL ELEMENTS					
(   82) INTEGER::LIMITER				!SLOPE LIMITER
(   83) INTEGER::IEXTEND				!EXTEND PARAMETER FOR CENTRAL BIG STENCIL ONLY FOR WENO CASES
(   84) INTEGER::IDEGFREE,IMAX,INUM,IDEG,inump,INUMO		!DEGREES OF FREEDOM OF POLYNOMIAL IT WILL BECOME LOCA	L
(   85) INTEGER::OUTSURF				!OUTSURF STANDS FOR COMPUTING FORCES 
(   86) INTEGER::UNWOU					!TYPE OF OUTPUT FILES TO WRITE ALL PARTITIONS TO ONE FILE ETC
(   87) INTEGER::IGQRULES				!GAUSSIAN QUADRATURE RULE
(   88) INTEGER::IMAXDEGFREE				!MAXIMUM NUMBER OF NEIGHBOURS
(   89) INTEGER::QP_HEXA,QP_TETRA,QP_PYRA,QP_PRISM,QP_QUAD,QP_TRIANGLE,QP_LINE !VOLUME GAUSSIAN QUADRATURE POINTS
(   90) INTEGER::NUMBEROFPOINTS,NUMBEROFPOINTS2				
(   91) INTEGER::RESCOUNTER				!COUNTER FOR RESIDUALS
(   92) INTEGER::RESCOUNTERT				!COUNTER FOR TURBULENCE RESIDUALS
(   93) INTEGER::ILX					!DEGREES OF FREEDOM FOR REQUIRED ORDER OF ACCURACY
(   94) INTEGER::IMAXB					!TOTAL NUMBER OF BOUNDARY CONDITIONS
(   95) INTEGER::IMAXN					!TOTAL NUMBER OF NODES PRESENT IN THE GRID
(   96) INTEGER::IN					!INDEX FOR CONSIDERED CELL
(   97) INTEGER::IORDER					!ORDER OF ACCURACY (SPATIAL)
(   98) INTEGER::IOVERST				! NUMBER OF ELEMENTS FOR THE STENCIL OVERDETERMINED MATRIX REQUIRED FOR AVOIDING ILL CONDITIONS






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 3

(   99) INTEGER::IOVERTO				! NUMBER OF ELEMENTS FOR THE ESTAB STENCILS OVERDETERMINED MATRIX REQUIRED FOR AVOIDING ILL CONDITIONS
(  100) INTEGER::QRDE					!TYPE OF SOLUTION FOR THE LEAST SQUARES PROBLEM
(  101) INTEGER::RUNGEKUTTA     			!TIME STEPPING SCHEME TYPE
(  102) INTEGER::ISCHEME 				!TYPE OF SCHEME TO BE USED
(  103) INTEGER::ISPLIT					!UNSPLIT FINIT VOLUME SCHEME
(  104) INTEGER::ISELEM					!MAXIMUM NUMBER OF ELEMENTS REQUIRED FOR THE STENCIL DEPENDENT ON THE ORDER OF ACCURACY
(  105) INTEGER::ISTN					!VARIABLE THAT TAKES EACH TIME THE VALUE OF THE CONSIDERED ELEMENT  TO FIND NEIGHBOURS IN THE STENCIL
(  106) INTEGER::ITT					!INTEGER VARIABLE USED FOR OPENING FILES
(  107) INTEGER::ITESTCASE
(  108) INTEGER::ITTT					!INTEGER OF LOGICAL OPERATION WHEN CONDITION IS SATISFIED AND THE ELEMENT IS SAVED IN THE ARRAY
(  109) INTEGER::IWEIGHTLSQR    			!WEIGHTED LEAST SQURES OPTION OF INVERTED DISTANCE
(  110) INTEGER::TYPESTEN				!NUMBER OF STENCILS FOR WENO
(  111) INTEGER::IPERIODICITY				!PERIODICITY DETECTED IN DOMAIN	
(  112) INTEGER::IWENO					!TYPE OF SCHEMES WENO, MUSCL, UNLIMITED
(  113) INTEGER::TURBULENCE				!TURBULENCE EQUATIONS
(  114) INTEGER::TURBULENCEMODEL			!WHICH MODEL
(  115) INTEGER::TURBULENCEEQUATIONS			!HOW MANY EQUATIONS TO SOLVE
(  116) INTEGER::ICOUPLETURB				!COUPLED TURBULENCE MODEL
(  117) INTEGER::IRIEMANN				!RIEMANN SOLVER
(  118) INTEGER::FIRSTORDER				!FIRST ORDER SCHEME ACTIVE
(  119) INTEGER::PASSIVESCALAR				!ADDITIONAL TRANSPORT EQUATIONS
(  120) INTEGER::QSAS_MODEL				!QSAS MODEL
(  121) INTEGER::VORT_MODEL				!VORTICITY MODEL
(  122) INTEGER::ZERO_TURB_INIT				!FLAG FOR TYPE OF INITIALIZATION FOR K-OMEGA
(  123) INTEGER::DES_MODEL 				!INTEGER SWITCHES FOR SST
(  124) INTEGER:: NPROBES,totwalls,NOF_INTERIOR,NOF_BOUNDED				!NUMBER OF PROBES FOR TRANSIENT DATA
(  125) 
(  126) !--------------------------------------------------------------------------------------------------------------------------!
(  127) !oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo!
(  128) !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! S.2.   INTEGER ALLOCATABLE VARIABLES HERE        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
(  129) !oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo!
(  130) !--------------------------------------------------------------------------------------------------------------------------!
(  131) 
(  132) INTEGER,ALLOCATABLE,DIMENSION(:,:)::PROBEI	!probe positions
(  133) INTEGER,ALLOCATABLE,DIMENSION(:,:)::GLNEIGH	!GLOBALIST OF ALL THE NEIGHBOURS IN THE GRID
(  134) INTEGER,ALLOCATABLE,DIMENSION(:)::IWHICHSTEN	!ALLOCATABLE INDEX FOR DESCRIBING WHICH STENCIL IS CONSIDERED WITHIN THE DIRECTIONAL STENCIL CONSTRUCTION ROUTINE
(  135) INTEGER,ALLOCATABLE,DIMENSION(:)::ISATISFIED	!ALLOCATABLE INDEX FOR DESCRIBING IF THE GEOMETRICAL CONDITIONS HAVE BEEN SATISFIED IN THE DIRECTIONAL STENCIL CONSTRUCTION ROUTINE
(  136) INTEGER,ALLOCATABLE,DIMENSION(:)::ISHYAPE,IBOUND_T,ibound_t2	!ALLOCATABLE INDEX FOR DESCRIBING THE SHYAPE OF THE CONSIDERED CELL
(  137) INTEGER,ALLOCATABLE,DIMENSION(:)::ISELEMT	!total number of elements in each stencil (extended one)
(  138) INTEGER,ALLOCATABLE,DIMENSION(:)::IX		!allocatable index FOR STENCIL ROUTINE
(  139) INTEGER,ALLOCATABLE,DIMENSION(:)::IISTART	!allocatable index FOR STENCIL ROUTINE
(  140) INTEGER,ALLOCATABLE,DIMENSION(:)::IFSAT		!allocatable index FOR STENCIL ROUTINE
(  141) INTEGER,ALLOCATABLE,DIMENSION(:)::ISOSA,EL_INT,EL_BND
(  142) INTEGER,ALLOCATABLE,DIMENSION(:)::PARE,DOSE,PAREEL,PARES
(  143) INTEGER,ALLOCATABLE,DIMENSION(:,:)::DOSEEL,SOSEEL
(  144) INTEGER,ALLOCATABLE,DIMENSION(:,:,:,:)::ILOCALSTENCIL	!4-D ARRAY FOR STENCILS
(  145) INTEGER,ALLOCATABLE,DIMENSION(:,:,:,:)::ILOCALALLELG	!4-D ARRAY FOR STENCILS 
(  146) INTEGER,ALLOCATABLE,DIMENSION(:)::XMPIE			!GLOBAL LIST OF NUMBER OF ELEMENTS THAT BELONG TO EACH CPU
(  147) INTEGER,ALLOCATABLE,DIMENSION(:)::XMPIL			!LOCAL LIST OF NUMBER OF ELEMENTS THAT BELONG TO EACH CPU
(  148) INTEGER,ALLOCATABLE,DIMENSION(:)::XMPIN			!NOT USED CAN GET RID OF
(  149) INTEGER,ALLOCATABLE,DIMENSION(:)::XMPIELRANK		!NUMBER OF ELEMENTS IN THIS CPU
(  150) INTEGER,ALLOCATABLE,DIMENSION(:)::XMPINRANK		!NOT USED CAN GET RID OF
(  151) INTEGER,ALLOCATABLE,DIMENSION(:,:,:)::XMPINNUMBER	!NOT USED CAN GET RID OF
(  152) INTEGER,ALLOCATABLE,DIMENSION(:)::STCON			!DUMMY VARIABLE FOR RECURSIVE SUBROUTINE OF STENCILS
(  153) INTEGER,ALLOCATABLE,DIMENSION(:)::STCONC		!DUMMY VARIABLE FOR RECURSIVE SUBROUTINE OF STENCILS
(  154) INTEGER,ALLOCATABLE,DIMENSION(:)::STCONS		!DUMMY VARIABLE FOR RECURSIVE SUBROUTINE OF STENCILS
(  155) INTEGER,ALLOCATABLE,DIMENSION(:)::STCONG		!DUMMY VARIABLE FOR RECURSIVE SUBROUTINE OF STENCILS
(  156) INTEGER,ALLOCATABLE,DIMENSION(:,:,:,:)::ILOCALALLS      !DUMMY VARIABLE FOR RECURSIVE SUBROUTINE OF STENCILS






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 4

(  157) !--------------------------------------------------------------------------------------------------------------------------!
(  158) !oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo!
(  159) !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! S.3.   REAL VARIABLES HERE        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
(  160) !oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo!
(  161) !--------------------------------------------------------------------------------------------------------------------------!
(  162) REAL::wenocentralweight,TIMESTEP,UPPERLIMIT,oo2,zero,voltemp,SHEAR_TEMP,forcex,forcey,forcez,extf
(  163) REAL::XD1		  	  		!X COORDINATES USED FOR THE POLYNOMIALS DERIVATIVES
(  164) REAL::YD1		  	  		!Y COORDINATES USED FOR THE POLYNOMIALS DERIVATIVES
(  165) REAL::ZD1		  	  		!Z COORDINATES USED FOR THE POLYNOMIALS DERIVATIVES
(  166) REAL::ANGLEFACEY				!ANGLE OF A FACE WITH RESPECT TO SPHERICAL COORDINATES THETA
(  167) REAL::ANGLEFACEX				!ANGLE OF A FACE WITH RESPECT TO SPHERICAL COORDINATES PHI
(  168) REAL::PI					!PI TRIGONOMETRI
(  169) REAL::X1,ax,ay,az,nx,ny,nz,nnx,nny,nnz					!X1 COORDINATE FOR BASIS FUNCTION COMPUTATION OF POLYNOMIALS
(  170) REAL::Y1					!Y1 COORDINATE FOR BASIS FUNCTION COMPUTATION OF POLYNOMIALS
(  171) REAL::Z1					!Z1 COORDINATE FOR BASIS FUNCTION COMPUTATION OF POLYNOMIALS
(  172) REAL::TAYLOR					!ONLY TO BE USED FOR TAYLOR GREEN VORTEX
(  173) REAL::VOLL					!TOTAL VOLUME OF THE DOMAIN	
(  174) REAL::UPTURBLIMIT				!UPPER TURBULENCE VISCOSITY RATIO
(  175) REAL::HYBRIDIST					!UPPER TURBULENCE VISCOSITY RATIO
(  176) REAL::VISCOTS					!EFFECTIVE VISCOCITY
(  177) REAL::REYNOLDS					!REYNOLDS NUMBER
(  178) REAL::CFLMAX					!MAXIMUM NUMBER OF ALLOWABLE CFL TO BE USED ONLY WITH IMPLICIT
(  179) REAL::PREVRES					!PREVIOUS RESIDUAL IN ORDER TO DETERMINE RAMPING STRATEGY
(  180) REAL::VECTORX					!SETTING UP WITH RESPECT TO WHICH PLANE THE AOA IS DEFINED X
(  181) REAL::VECTORY					!SETTING UP WITH RESPECT TO WHICH PLANE THE AOA IS DEFINED Y
(  182) REAL::VECTORZ					!SETTING UP WITH RESPECT TO WHICH PLANE THE AOA IS DEFINED Z
(  183) REAL::GRIDAR1					!ASPECT RATIO OF GRID
(  184) REAL::GRIDAR2					!MAXIMUM VOLUME ASPECT RATIO OF STENCILS
(  185) REAL::T						!TIME	
(  186) REAL::TOTALVOLUME				!TOTAL VOLUME OF DOMAIN
(  187) REAL::RESLIMIT       				!LIMIT TO STOP THE SIMULATION
(  188) REAL::ANGLE1					!ANGLE
(  189) REAL::ANGLE2					!ANGLE
(  190) REAL::RES_TIME					!RESTART_TIME
(  191) REAL::IEVERY2					!HOW OFTEN TO WRITE OUTPUT
(  192) REAL::WALLC					!WALL CLOCK LIMIT IN SECONDS
(  193) REAL::BETAAS					!BETAAS OF SUTHERLAND EXPONENT
(  194) REAL::SUTHER					!SUTHERLAND NON DIMENSIONAL CONSTANT OF TEMPERATURE
(  195) REAL::PRANDTL					!PRANDTL NUMBER
(  196) REAL::SCALER					!FOR SCALING THE MESH 
(  197) REAL::LWCI1					!LINEAR WENO WEIGHT OF CENTRAL STENCILS				!
(  198) REAL::RESMAX					!RESIDUAL DIMENSIONAL MEAN FLOW
(  199) REAL::RESMAXT					!RESIDUAL DIMENSIONAL TURBULENCE
(  200) REAL::CFL					!CFL NUMBER
(  201) REAL::IEVERY					!HOW OFTEN TO WRITE OUTPUT
(  202) REAL::IEVERYAV					!HOW OFTEN TO WRITE OUTPUT OF AVERAGE SOLUTION
(  203) REAL:: FIRSTRESU				!RESIDUAL DIMENSIONAL MEAN FLOW
(  204) REAL::FIRSTRESV					!RESIDUAL DIMENSIONAL MEAN FLOW
(  205) REAL::FIRSTRESW					!RESIDUAL DIMENSIONAL MEAN FLOW
(  206) REAL::FIRSTRESE					!RESIDUAL DIMENSIONAL MEAN FLOW
(  207) REAL::FIRSTRESR					!RESIDUAL DIMENSIONAL MEAN FLOW
(  208) REAL::FIRSTREST					!RESIDUAL DIMENSIONAL MEAN FLOW
(  209) REAL::FIRSTRESK					!RESIDUAL DIMENSIONAL MEAN FLOW
(  210) REAL::FIRSTRESOMEGA				!RESIDUAL DIMENSIONAL MEAN FLOW
(  211) REAL::FIRSTRESPASS				!RESIDUAL DIMENSIONAL MEAN FLOW
(  212) REAL::GAMMA 					!GAS CONSTANT
PGF90-I-0035-Predefined intrinsic gamma loses intrinsic property (declarations.f90: 212)
(  213) REAL::UVEL					!U VELOCITY






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 5

(  214) REAL::UFREESTREAM				!U VELOCITY
(  215) REAL::VVEL					!V-VELOCITY
(  216) REAL::WVEL					!W-VELOCITY
(  217) REAL::PRES					!PRESSURE
(  218) REAL::RRES					!DENSITY
(  219) REAL::SPOS					!SPEED OF SOUND
(  220) REAL::ETOT					!TOTAL ENERGY
(  221) REAL::SPKIN					!SPECIFIC KINETIC ENERGY
(  222) REAL::LAM					!HEAT CONDUCTIVITY (WATT/(MK))
(  223) REAL::VISC					!VISCOSITY
(  224) REAL::LAMX					!FLAGS TO BE USED FOR RESTARTING
(  225) REAL::LAMY					!FLAGS TO BE USED FOR RESTARTING
(  226) REAL::LAMZ					!FLAGS TO BE USED FOR RESTARTING
(  227) 					!FLAGS TO BE USED FOR RESTARTING
(  228) REAL::OUT_TIME					!FINAL TIME TO WRITE OUTPUT FOR UNSTEADY SIMULATIONS
(  229) REAL::XPER					!PERIODICITY IN X AXIS
(  230) REAL::YPER					!PERIODICITY IN Y AXIS
(  231) REAL::ZPER					!PERIODICITY IN Z AXIS
(  232) REAL::AOA					!ANGLE OF ATTACK	
(  233) REAL::CHARLENGTH				!CHARACTERISTIC LENGTH IF UNDEFINED, AND REYNOLDS UNDEFINED THE FREE STREAM WILL BE USED FOR AIR
(  234) 						!TURBULENCE MODEL constants
(  235) REAL::TURBINIT				!TURBULENCE INITIAL VALUE VT/V
(  236) REAL::CB1
(  237) REAL::CB2
(  238) REAL::SIGMA
(  239) REAL::KAPPA
(  240) REAL::CW1
(  241) REAL::CW2
(  242) REAL::CW3
(  243) REAL::CV1
(  244) REAL::CT1
(  245) REAL::CT2
(  246) REAL::CT3
(  247) REAL::CT4
(  248) REAL::PRTU
(  249) REAL::TWALL
(  250) 
(  251) 
(  252) REAL::SIGMA_K1
(  253) REAL::SIGMA_K2
(  254) REAL::SIGMA_OM1
(  255) REAL::SIGMA_OM2
(  256) REAL::AA_1
(  257) REAL::BETA_I1
(  258) REAL::BETA_I2
(  259) REAL::ALPHA_STARINF
(  260) REAL::ALPHA_0
(  261) REAL::BETA_STARINF
(  262) REAL::R_BETA
(  263) REAL::R_K_SST
(  264) REAL::BETA_T
(  265) REAL::KAPPA_SST
(  266) REAL::R_OM_SST
(  267) REAL::ZETA_STAR
(  268) REAL::M_T0
(  269) REAL::C_SMG
(  270) REAL::ETA2_SAS
(  271) REAL::SIGMA_PHI






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 6

(  272) REAL::C_SAS
(  273) REAL::ALPHA_INF1
(  274) REAL::ALPHA_INF2
(  275) REAL::ALPHA_STAR0
(  276) REAL::C_MU_INLET   						!FUNCTIONS FOR SST
(  277) REAL::L_TURB_INLET
(  278) REAL::I_TURB_INLET
(  279) REAL::INIT_MU_RATIO
(  280) REAL::C_DES_SA
(  281) REAL::C_DES_SST
(  282) REAL:: SCHMIDT_LAM
(  283) REAL::SCHMIDT_TURB
(  284) real::tolsmall,TOLBIG,allresdt,tz1
(  285) REAL,DIMENSION(7)::ALLRES,INITIALRES
(  286) !--------------------------------------------------------------------------------------------------------------------------!
(  287) !oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo!
(  288) !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! S.4.   REAL ALLOCATABLE VARIABLES HERE        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
(  289) !oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo!
(  290) !--------------------------------------------------------------------------------------------------------------------------!
(  291) real::a_rot,c_rot,b_rot,root_rot,sheartemp
(  292) !$OMP THREADPRIVATE(ICONS_S,ICONS_E,SHEARTEMP,IMAX,NUMBER_OF_NEI,b_code,INUM,angle1,angle2,IDEG,n_node,inump,INUMO,A_ROT,C_ROT,B_ROT,ROOT_ROT,ANGLEFACEX,ANGLEFACEY,voltemp)
(  293) REAL,ALLOCATABLE,DIMENSION(:,:)::VVA,VVA1,lscqm1
PGF90-S-0285-Source line too long (declarations.f90: 294)
(  294) REAL,ALLOCATABLE,DIMENSION(:)::B1_imp,DU1,DU2,DUMMY12,C1_imp,DUR,DUL,DURR,DULR,DUT1,B1T,DUMMY12T,SOURCE_T,sb,DETA,UTMIN,UTMAX,VVr1,VVr2,VVr3,VVR4,VVwg,VVnpox,VVnpoy,VVnpoz,VVwpox,VVwpoy,VVwpoz,VVnxi,VVneta,VVnzeta,VVxi,VVeta,VVzeta,VVnallx,VVnally,VVnallz,VVB,
PGF90-S-0285-Source line too long (declarations.f90: 295)
(  295) !$OMP THREADPRIVATE(sb,IBFC,number_of_dog,lscqm1,B1_imp,DU1,DU2,DUMMY12,C1_imp,DUR,DUL,DURR,DULR,DUT1,B1T,DUMMY12T,SOURCE_T,UTMIN,UTMAX,ax,ay,az,nx,ny,nz,nnx,nny,nnz,VVA,DETA,VVA1,VVr1,VVr2,VVr3,VVR4,VVwg,VVnpox,VVnpoy,VVnpoz,VVwpox,VVwpoy,VVwpoz,VVnxi,VVneta,
(  296) 
(  297) 	
PGF90-S-0034-Syntax error at or near end of line (declarations.f90: 294)
(  298) REAL,ALLOCATABLE,DIMENSION(:)::CLEFT 	   	!VALUE OF THE RECONSTRUCTED SOLUTION REFERING TO MY CELL (I) CONSERVED VARIABLE
PGF90-S-0134-Illegal attribute - duplicate allocatable (declarations.f90: 298)
PGF90-S-0134-Illegal attribute - duplicate dimension (declarations.f90: 298)
(  299) REAL,ALLOCATABLE,DIMENSION(:)::CLEFT_ROT 	!VALUE OF THE RECONSTRUCTED SOLUTION REFERING TO MY CELL (I) ROTATED WITH RESPECT TO ITS  FACE CONSERVED VARIABLE
(  300) REAL,ALLOCATABLE,DIMENSION(:)::CRIGHT		!VALUE OF THE RECONSTRUCTED SOLUTION REFERING TO THE NEIGHBOUR OF MY CELL (I) CONSERVED VARIABLE
(  301) REAL,ALLOCATABLE,DIMENSION(:)::CRIGHT_ROT	!VALUE OF THE RECONSTRUCTED SOLUTION REFERING TO THE NEIGHBOUR OF MY CELL (I) ROTATED WITH RESPECT TO ITS  FACE CONSERVED VARIABLE
(  302) REAL,ALLOCATABLE,DIMENSION(:)::SL		!WAVE SPEED ESTIMATE OF LEFT STATE OF THE SOLUTION OF A FACE 
(  303) REAL,ALLOCATABLE,DIMENSION(:)::SR		!WAVE SPEED ESTIMATE OF RIGHT STATE OF THE SOLUTION OF A FACE 
(  304) REAL,ALLOCATABLE,DIMENSION(:)::SM		!WAVE SPEED ESTIMATE OF STAR REGION ACCORDING TO RIEMANN SOLVER FAN
(  305) REAL,ALLOCATABLE,DIMENSION(:)::CTURBL		!VALUE OF THE RECONSTRUCTED SOLUTION OF ADDITIONAL EQUATIONS REFERING TO MY CELL (I)  PRIMITIVE VARIABLE
(  306) REAL,ALLOCATABLE,DIMENSION(:)::CTURBR		!VALUE OF THE RECONSTRUCTED SOLUTION OF ADDITIONAL EQUATIONS REFERING TO  THE NEIGHBOUR OF MY CELL (I)  PRIMITIVE VARIABLE
(  307) REAL,ALLOCATABLE,DIMENSION(:)::ROTVL		!VALUE OF THE RECONSTRUCTED SOLUTION REFERING TO MY CELL (I) ROTATED WITH RESPECT TO ITS  FACE PRIMITIVE VARIABLE
(  308) REAL,ALLOCATABLE,DIMENSION(:)::ROTVR		!VALUE OF THE RECONSTRUCTED SOLUTION REFERING TO THE NEIGHBOUR OF MY CELL (I) ROTATED WITH RESPECT TO ITS  FACE PRIMITIVE VARIABLE
(  309) REAL,ALLOCATABLE,DIMENSION(:)::HLLCFLUX		!VALUE OF THE RIEMANN SOLUTION  NORMAL TO FACE DIRECTION 
(  310) REAL,ALLOCATABLE,DIMENSION(:)::RHLLCFLUX	!VALUE OF THE RIEMANN SOLUTION AT CARTESIAN COORDINATES
(  311) REAL::L1NORM		!L1 NORM OF SOLUTION FOR GRID CONVERGENCE STUDIES OF EULER AND LINEAR ADVECTION EQUATIONS
(  312) REAL::L2NORM		!L2 NORM OF SOLUTION FOR GRID CONVERGENCE STUDIES OF EULER AND LINEAR ADVECTION EQUATIONS
(  313) REAL::L0NORM		!L0 NORM OF SOLUTION FOR GRID CONVERGENCE STUDIES OF EULER AND LINEAR ADVECTION EQUATIONS
(  314) REAL::DT 					!REAL TIME STEP SIZE       
(  315) REAL,ALLOCATABLE,DIMENSION(:)::GODFLUX		!THE FLUX FOR THE GODUNOV ONLY TO BE USED WITH LINEAR ADVECTION EQUATION
(  316) REAL,ALLOCATABLE,DIMENSION(:,:)::WEFF		!GEOMETRIC SMOOTHNESS INDICATOR FOR WENO SCHEMES  SEE PAPER TSOUTSANIS ET AL
(  317) REAL,ALLOCATABLE,DIMENSION(:)::AVRG		!TEMPORARY SOLUTION AVERAGES
(  318) REAL,ALLOCATABLE,DIMENSION(:)::POX		!POSITION COORDINATES X
(  319) REAL,ALLOCATABLE,DIMENSION(:)::POY		!POSITION COORDINATES Y
(  320) REAL,ALLOCATABLE,DIMENSION(:)::POZ		!POSITION COORDINATES Z
(  321) REAL,ALLOCATABLE,DIMENSION(:,:)::JAC		!jacobians
(  322) REAL,ALLOCATABLE,DIMENSION(:,:)::INVERSEJAC	!inverse jacobians
(  323) REAL,ALLOCATABLE,DIMENSION(:)::DETERJAC		!determinant jacobians
(  324) REAL,ALLOCATABLE,DIMENSION(:,:)::PROBEC		!probe positions






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 7

(  325) REAL,ALLOCATABLE,DIMENSION(:,:)::JACS		!jacobians
(  326) REAL,ALLOCATABLE,DIMENSION(:,:)::INVERSEJACS	!inverse jacobians
(  327) REAL,ALLOCATABLE,DIMENSION(:)::DETERJACS	!determinant jacobians
(  328) REAL,ALLOCATABLE,DIMENSION(:)::EDDYFL		!EDDY VISCOSITY CALCULATION INPUT LEFT STATE
(  329) REAL,ALLOCATABLE,DIMENSION(:)::EDDYFR		!EDDY VISCOSITY CALCULATION INPUT RIGHT STATE
(  330) REAL,ALLOCATABLE,DIMENSION(:,:)::IMPDU		!IMPLICIT ONLY CHANGE OF SOLUTION
(  331) REAL,ALLOCATABLE,DIMENSION(:,:)::TRI		!MATRIX FOR TRANSFORMATION
(  332) REAL,ALLOCATABLE,DIMENSION(:,:,:)::IMPDIAG	!IMPLICIT ONLY DIAGONAL MATRIX D
(  333) REAL,ALLOCATABLE,DIMENSION(:,:,:,:)::IMPOFF	!IMPLICIT ONLY OFF DIAGONAL MATRIX D
(  334) REAL,ALLOCATABLE,DIMENSION(:,:,:)::IMPOFFT	!IMPLICIT ONLY OFF DIAGONAL MATRIX D FOR TURBULENCE
(  335) REAL,ALLOCATABLE,DIMENSION(:,:)::IMPDIAGT	!IMPLICIT ONLY  DIAGONAL MATRIX D FOR TURBULENCE
(  336) REAL,ALLOCATABLE,DIMENSION(:,:)::SHT		!IMPLICIT ONLY  SORUCE TERM JACOBIAN
(  337) REAL,ALLOCATABLE,DIMENSION(:,:)::INVTRI		!INVERSE MATRIX FOR TRANSFORMATION
(  338) REAL,ALLOCATABLE,DIMENSION(:)::ROTVECT		!ROTATED VECTOR OF CONSERVED VARIABLES
(  339) REAL,ALLOCATABLE,DIMENSION(:)::VECTCO		! VECTOR OF CONSERVED VARIABLES
(  340) REAL,ALLOCATABLE,DIMENSION(:)::XMIN		!SE
(  341) REAL,ALLOCATABLE,DIMENSION(:)::XMAX		!SE
(  342) REAL,ALLOCATABLE,DIMENSION(:)::YMIN		!SE
(  343) REAL,ALLOCATABLE,DIMENSION(:)::YMAX		!SE
(  344) REAL,ALLOCATABLE,DIMENSION(:)::ZMIN		!SE
(  345) REAL,ALLOCATABLE,DIMENSION(:)::ZMAX		!SE
(  346) REAL,ALLOCATABLE,DIMENSION(:)::LEFTV		!LEFT STATE VARIABLES
(  347) REAL,ALLOCATABLE,DIMENSION(:)::RIGHTV		!RIGHT STATE VARIABLES
(  348) REAL,ALLOCATABLE,DIMENSION(:)::VISCL		!LAMINAR VISCOSITY ACCORDING TO SUTHERLAND
(  349) REAL,ALLOCATABLE,DIMENSION(:)::LAML		!HEAT CONDUCTIVITY ACCORDING TO SUTHERLAND
(  350) REAL,ALLOCATABLE,DIMENSION(:)::ETVM		!EDDY VISCOSITY
(  351) REAL,ALLOCATABLE,DIMENSION(:)::TURBMV		!ADVECTED TURBULENCE PARAMETER
(  352) REAL::NORMALVECT	!NORMAL VECTOR
(  353) REAL,ALLOCATABLE,DIMENSION(:)::CPUX1		!TIMER
(  354) REAL,ALLOCATABLE,DIMENSION(:)::CPUX2		!TIMER
(  355) REAL,ALLOCATABLE,DIMENSION(:)::CPUX3		!TIMER
(  356) REAL,ALLOCATABLE,DIMENSION(:)::CPUX4		!TIMER
(  357) REAL,ALLOCATABLE,DIMENSION(:)::CPUX5		!TIMER
(  358) REAL,ALLOCATABLE,DIMENSION(:)::CPUX6		!TIMER
(  359) REAL,ALLOCATABLE,DIMENSION(:)::CPUX7		!TIMER
(  360) REAL,ALLOCATABLE,DIMENSION(:)::TIMEX1		!TIMER
(  361) REAL,ALLOCATABLE,DIMENSION(:)::TIMEX2		!TIMER
(  362) REAL,ALLOCATABLE,DIMENSION(:)::TIMEX3		!TIMER
(  363) REAL,ALLOCATABLE,DIMENSION(:)::TIMEX4		!TIMER
(  364) REAL,ALLOCATABLE,DIMENSION(:)::TIMEX5		!TIMER
(  365) REAL,ALLOCATABLE,DIMENSION(:)::TIMEX6		!TIMER
(  366) REAL,ALLOCATABLE,DIMENSION(:)::VEIGL		! VECTOR OF CHARACTERISTIC VARIABLES LEFT STATE
(  367) REAL,ALLOCATABLE,DIMENSION(:)::VEIGR		! VECTOR OF CHARACTERISTIC VARIABLES RIGHT STATE
(  368) REAL,ALLOCATABLE,DIMENSION(:)::RVEIGL		! ROTATED VECTOR OF CHARACTERISTIC VARIABLES LEFT STATE
(  369) REAL,ALLOCATABLE,DIMENSION(:)::RVEIGR		! ROTATED VECTOR OF CHARACTERISTIC VARIABLES RIGHT STATE
(  370) REAL,ALLOCATABLE,DIMENSION(:,:)::EIGVL		!EIGENVECTOR MATRIX 
(  371) REAL,ALLOCATABLE,DIMENSION(:,:)::EIGVR		!INVERSE EIGENVECTOR MATRIX
(  372) REAL,ALLOCATABLE,DIMENSION(:,:)::VEXT		!VERTICES ARRAY
(  373) REAL,ALLOCATABLE,DIMENSION(:,:)::IFIN		!TEMPORARY POINTER FOR SYNC OUTPUT
(  374) REAL,ALLOCATABLE,DIMENSION(:,:)::TFIN		!TEMPORARY POINTER FOR SYNC OUTPUT
(  375) REAL,ALLOCATABLE,DIMENSION(:,:)::CENTERR	!FOR DIRECTIONAL STENCILS	
(  376) REAL,ALLOCATABLE,DIMENSION(:,:)::BC		!FOR DIRECTIONAL STENCILS
(  377) REAL,ALLOCATABLE,DIMENSION(:,:)::VG		!FOR DIRECTIONAL STENCILS
(  378) REAL,ALLOCATABLE,DIMENSION(:,:,:)::VC		!FOR DIRECTIONAL STENCILS
(  379) REAL,ALLOCATABLE,DIMENSION(:)::VECCOS,turbc1,turbc2,tempflux2,SUBSON1,SUBSON2,SUBSON3		!VECTOR OF CONSERVED VARIABLES
(  380) REAL,ALLOCATABLE,DIMENSION(:)::TEMPFL,TEMPFR,FLSTAR,FRSTAR,ULSTAR,UrSTAR,TEMPUL,TEMPUR,FL,FR,RML,RMR
(  381) REAL,ALLOCATABLE,DIMENSION(:)::WEQUA3D		!WEIGHTS OF GAUSSIAN QUADRATURE POINTS 3D
(  382) REAL,ALLOCATABLE,DIMENSION(:)::WEQUA2D		!WEIGHTS OF GAUSSIAN QUADRATURE POINTS 2D






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 8

(  383) REAL,ALLOCATABLE,DIMENSION(:,:)::QPOINTS2D	!GUASSIAN OF GAUSSIAN QUADRATURE POINTS 2D
(  384) REAL,ALLOCATABLE,DIMENSION(:,:)::QPOINTS	!WEIGHTS OF GAUSSIAN QUADRATURE POINTS 2D
(  385) !$OMP THREADPRIVATE(WEQUA3D,WEQUA2D,QPOINTS2D,QPOINTS)
(  386) REAL,ALLOCATABLE,DIMENSION(:)::CORDS
(  387) REAL,ALLOCATABLE,DIMENSION(:,:)::NODES_LIST
(  388) REAL,ALLOCATABLE,DIMENSION(:,:,:)::ELEM_LISTD
(  389) !$OMP THREADPRIVATE(TEMPFL,TEMPFR,FLSTAR,FRSTAR,ULSTAR,UrSTAR,TEMPUL,TEMPUR,FL,FR,RML,RMR,NODES_LIST,VEXT,ELTYPE,ELEM_DEC,ELEM_LISTD,DETERJACS,JACS,INVERSEJACS,LEFTV,RIGHTV,CORDS,VISCL,LAML,ETVM,TURBMV)
(  390) 
(  391) 
(  392) 
(  393) real,allocatable,dimension(:,:)::SIND1,SIND2,SIND3,SIND4,SIND5,SIND6,MATRIX_A,LSQM,VELLSQMAT,MATRIX_SOLUTION,MATRIXFACE,JUSTCHECK,Q,R,QT,INVR,LSCQM,LSCQM2
(  394) real,allocatable,dimension(:,:)::QFF,RFF,QTFF,INVRFF,AINVJT
(  395) real,allocatable,dimension(:)::MATRIX_B,MATRIX_X,BASEFACEVAL,BASEFACGVAL,MOMENT,WEIGHTINV,VECTOR,INTBS,XDER,YDER,ZDER
(  396) integer,allocatable,dimension(:)::permutation,permutationg
(  397) 
(  398) !$OMP THREADPRIVATE(NORMALVECT,WEFF,MATRIX_A,LSQM,VELLSQMAT,MATRIX_SOLUTION,MATRIXFACE,JUSTCHECK,Q,R,QT,INVR,LSCQM,LSCQM2,ivgt)
(  399) !$OMP THREADPRIVATE(QFF,RFF,QTFF,INVRFF,AINVJT,MATRIX_B,MATRIX_X,BASEFACEVAL,BASEFACGVAL,MOMENT,WEIGHTINV,VECTOR,INTBS,PERMUTATION,PERMUTATIONG,XDER,YDER,ZDER)
(  400) 
(  401) 
(  402) !$OMP THREADPRIVATE(IXX,JXX,KXX,LXX1,NUMBER,ICONSIDERED,X1,Y1,Z1,facex,ixxff,iconsi,lxx,VECCOS)
(  403) 
(  404) !$OMP THREADPRIVATE(CLEFT,cleft_rot,cright,cright_rot,sl,sr,sm,HLLCFLUX)
(  405) !$OMP THREADPRIVATE(RHLLCFLUX,ROTVL,ROTVR,SUBSON1,SUBSON2,SUBSON3,CTURBL,CTURBr)
(  406) !$OMP THREADPRIVATE(turbc1,turbc2,tempflux2,TRI,INVTRI,ROTVECT,VECTCO,VEIGL,VEIGR,RVEIGL,RVEIGR,EIGVL,EIGVR,POX,POY,POZ)
(  407) 
(  408) REAL,ALLOCATABLE,DIMENSION(:)::GRADSV,VORTEM1,VERTF1,vertex1,DERIVTURB1,UGRADLOC,GRADVEL,GRADTEM,GRAD1AL,INDICATEMATRIXAL,SMOOTHINDICATORAL,LAMBDAAL,OMEGAATILDEL,OMEGAAL,SUMOMEGATILDE
(  409) REAL,ALLOCATABLE,DIMENSION(:)::VECL,VECR,CFAST,LSOLP,RSOLP,SUMGGU,SUMGGV,SUMGGW,SUMGGP,SUMGGT,SUMGGT2
(  410) REAL,ALLOCATABLE,DIMENSION(:)::MATRIX_BN3,MATRIX_BN4,MATRIX_BN5,MATRIX_B1,MATRIX_B2,MATRIX_B3,MATRIX_B4,MATRIX_B5,Xxx
(  411) REAL,ALLOCATABLE,DIMENSION(:)::X2,MATRIX_BWC,MATRIX_BN,MATRIX_BN1,MATRIX_BN2
(  412) REAL,ALLOCATABLE,DIMENSION(:,:)::GRADSS,VORTET1,consmatrix,RFFAST,RRFFAST,tempsc,UTEMP
(  413) REAL,ALLOCATABLE,DIMENSION(:,:)::GRAD1,GRAD2,INDICATEMATRIX,GRADCHAR,LIMITEDDW,WENOO,WENO,WENO2,GRADSSL,RESSOLUTION
(  414) REAL,ALLOCATABLE,DIMENSION(:,:,:)::USOL,PSI,GRADCHARV
(  415) REAL,ALLOCATABLE,DIMENSION(:,:,:,:)::FINDW,SMOOTHINDICATOR,LAMBDA,OMEGATILDE,OMEGA,WENOOS
(  416) 
(  417) !$OMP THREADPRIVATE(GRADSV,VORTEM1,VERTF1,vertex1,DERIVTURB1,UGRADLOC,GRADVEL,GRADTEM,GRAD1AL,INDICATEMATRIXAL,SMOOTHINDICATORAL,LAMBDAAL,OMEGAATILDEL,OMEGAAL,SUMOMEGATILDE,RESSOLUTION)
(  418) !$OMP THREADPRIVATE(VECL,VECR,CFAST,LSOLP,RSOLP,SUMGGU,SUMGGV,SUMGGW,SUMGGP,SUMGGT,SUMGGT2)
(  419) !$OMP THREADPRIVATE(MATRIX_BN3,MATRIX_BN4,MATRIX_BN5,MATRIX_B1,MATRIX_B2,MATRIX_B3,MATRIX_B4,MATRIX_B5,Xxx)
(  420) !$OMP THREADPRIVATE(X2,MATRIX_BWC,MATRIX_BN,MATRIX_BN1,MATRIX_BN2)
(  421) !$OMP THREADPRIVATE(GRADSS,VORTET1,consmatrix,RFFAST,RRFFAST,tempsc,UTEMP)
(  422) !$OMP THREADPRIVATE(GRAD1,GRAD2,INDICATEMATRIX,GRADCHAR,LIMITEDDW,WENOO,WENO,WENO2,GRADSSL)
(  423) !$OMP THREADPRIVATE(USOL,PSI,GRADCHARV)
(  424) !$OMP THREADPRIVATE(FINDW,SMOOTHINDICATOR,LAMBDA,OMEGATILDE,OMEGA,WENOOS)
(  425) 
(  426) 
(  427) 
(  428) !--------------------------------------------------------------------------------------------------------------------------!
(  429) !oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo!
(  430) !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! S.5.   DATA TYPE VARIABLES HERE        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
(  431) !oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo!
(  432) !--------------------------------------------------------------------------------------------------------------------------!
(  433) 
(  434) 
(  435) 
(  436) TYPE::U_CENTRE					!DATA TYPE THAT HOLDS THE CELL CENTER VALUES FOR THE EQUATIONS TO BE SOLVED
(  437) 	REAL,ALLOCATABLE,DIMENSION(:,:)::VAL	!ACTUAL VALUES (FIRST INDEX CORRESPONDS TO RUNGE-KUTTA STAGE,THE SECOND ONE CORRESPONDS TO NUMBER OF VARIABLES FOR MEAN FLOW EQUATIONS)
(  438) 	REAL,ALLOCATABLE,DIMENSION(:)::RMS	!RMS VALUES OF THE CONSERVED VECTOR IN CASE OF TRANSIENT SIMULATIONS
(  439) END TYPE U_CENTRE
(  440) 






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 9

(  441) TYPE::FACE_D
(  442) 	INTEGER,ALLOCATABLE,DIMENSION(:)::Q_MAPL,QMAPD
(  443) END TYPE FACE_D
(  444) 
(  445) TYPE(U_CENTRE),ALLOCATABLE,DIMENSION(:)::U_C 	!1-D ARRAY FOR TYPE FOR SOLUTION OF MEAN FLOW EQUATIONS
(  446) TYPE(U_CENTRE),ALLOCATABLE,DIMENSION(:)::U_CT 	!1-D ARRAY FOR TYPE FOR SOLUTION OF TURBULENT EQUATIONS 
(  447) 
(  448) 
(  449) TYPE::U_EXACT					!DATA TYPE THAT HOLDS THE CELL CENTER VALUES OF THE EXACT SOLUTION FOR LINEAR ADVECTION OF EULER EQUATIONS IF AN EXACT SOLUTION EXISTS
(  450) 	REAL,ALLOCATABLE,DIMENSION(:,:)::VAL	!VALUES OF THE EXACT SOLUTION
(  451) END TYPE U_EXACT
(  452) TYPE(U_EXACT),ALLOCATABLE,DIMENSION(:)::U_E	!1-D ARRAY FOR TYPE FOR EXACT SOLUTION OF MEAN FLOW EQUATIONS
(  453) 
(  454) 
(  455) TYPE::SUMFLUXES					!DATA TYPE FOR THE FLUXES CONTRIBUTION
(  456) 	REAL,ALLOCATABLE,DIMENSION(:)::VAL	!NUMBER OF VALUES FOR THE FLUXES
(  457) END TYPE SUMFLUXES
(  458) TYPE(SUMFLUXES),ALLOCATABLE,DIMENSION(:)::SUMCONFLUX	!CONVECTIVE FLUXES MEAN FLOW EQUATIONS
(  459) TYPE(SUMFLUXES),ALLOCATABLE,DIMENSION(:)::SUMVISCFLUX	!VISCOUS FLUXES MEAN FLOW EQUATIONS
(  460) TYPE(SUMFLUXES),ALLOCATABLE,DIMENSION(:)::SOURCETERM	!SOURCETERM
(  461) TYPE(SUMFLUXES),ALLOCATABLE,DIMENSION(:)::SUMCONFLUXT	!CONVECTIVE FLUXES ADDITIONAL EQUATIONS
(  462) TYPE(SUMFLUXES),ALLOCATABLE,DIMENSION(:)::SUMVISCFLUXT  !VISCOUS FLUXES ADDITIONAL EQUATIONS
(  463) TYPE(SUMFLUXES),ALLOCATABLE,DIMENSION(:)::RHS		!RIGHT HAND SIDE OF THE MEAN FLOW EQUATIONS (SUM OF ALL FLUXES CONTRIBUTIONS)
(  464) TYPE(SUMFLUXES),ALLOCATABLE,DIMENSION(:)::RHST		!RIGHT HAND SIDE OF THE ADDITIONAL FLOW EQUATIONS (SUM OF ALL FLUXES CONTRIBUTIONS)
(  465) 
(  466) 
(  467) TYPE INTEGRALBASIS 
(  468) 	REAL,allocatable,dimension(:)::VALUE
(  469) END TYPE INTEGRALBASIS
(  470) TYPE(INTEGRALBASIS),ALLOCATABLE,DIMENSION(:)::INTEG_BASIS
(  471) 
(  472) 
(  473) TYPE LOCAL_ELEMENT
(  474) 	INTEGER::IADMIS
(  475) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::IHEXG
(  476) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::IHEXL
(  477) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::IHEXB
(  478) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::IHEXN
(  479) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::ISHAPE
(  480) 	REAL,ALLOCATABLE,DIMENSION(:,:)::XXC
(  481) 	REAL,ALLOCATABLE,DIMENSION(:,:)::YYC
(  482) 	REAL,ALLOCATABLE,DIMENSION(:,:)::ZZC
(  483) 	REAL,ALLOCATABLE,DIMENSION(:,:)::VOLUME
(  484) END TYPE LOCAL_ELEMENT
(  485) 
(  486) 
(  487) 
(  488) TYPE(LOCAL_ELEMENT),ALLOCATABLE,DIMENSION(:)::ILOCAL_ELEM
(  489) 
(  490) TYPE LOCAL_NODE
(  491) 	INTEGER::IADMIS
(  492) 	INTEGER,ALLOCATABLE,DIMENSION(:,:,:)::NODCOUNT
(  493) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::X
(  494) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::Y
(  495) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::Z
(  496) END TYPE LOCAL_NODE
(  497) 
(  498) TYPE(LOCAL_NODE),ALLOCATABLE,DIMENSION(:)::ILOCAL_NODE






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 10

(  499) !$OMP THREADPRIVATE(ILOCAL_NODE,ILOCAL_ELEM)
(  500) TYPE LOCAL_RECON3
(  501) 	INTEGER::LOCAL
(  502) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::IHEXG
(  503) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::IHEXL
(  504) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::IHEXB
(  505) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::IHEXN
(  506) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::GRADIENTS
(  507) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::GRADIENTSTURB
(  508) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::GRADIENTSTURB_wall
(  509) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::GRADIENTS2
(  510) 	REAL,ALLOCATABLE,DIMENSION(:)::GRADIENTSTEMP
(  511) 	REAL,ALLOCATABLE,DIMENSION(:,:)::GRADIENTSTEMP_wall
(  512) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::CGRADIENTSTEMP
(  513) 	REAL,ALLOCATABLE,DIMENSION(:,:)::VELOCITYDOF
(  514) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::VELOCITYDOF_wall
(  515) 	REAL,ALLOCATABLE,DIMENSION(:,:)::INVCCJAC
(  516) 	REAL,ALLOCATABLE,DIMENSION(:,:)::INVCTJAC
(  517) 	REAL,ALLOCATABLE,DIMENSION(:,:,:,:)::CVELOCITYDOF
(  518) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::STENCILS
(  519) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::INVMAT
(  520) 	REAL,ALLOCATABLE,DIMENSION(:,:)::VOLUME
(  521) 	REAL,ALLOCATABLE,DIMENSION(:,:)::GRADS
(  522) 	REAL,ALLOCATABLE,DIMENSION(:,:)::WALLD
(  523) 	REAL,ALLOCATABLE,DIMENSION(:,:)::VERTEX
(  524) 	REAL,ALLOCATABLE,DIMENSION(:,:)::FACESCORD
(  525) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::ULEFT
(  526) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::QPOINTS
(  527) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::ULEFTTURB
(  528) 	REAL,ALLOCATABLE,DIMENSION(:,:,:,:)::ULEFTV
(  529) 	REAL,ALLOCATABLE,DIMENSION(:,:,:,:)::ULEFTTURBV
(  530) 	REAL,ALLOCATABLE,DIMENSION(:,:)::WENO
(  531) 	REAL,ALLOCATABLE,DIMENSION(:,:)::WENO2
(  532) 	REAL,ALLOCATABLE,DIMENSION(:,:,:,:)::WENOS
(  533) 	REAL,ALLOCATABLE,DIMENSION(:,:,:,:)::FINDW
(  534) 	REAL,ALLOCATABLE,DIMENSION(:,:)::INDICATOR
(  535) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::WGAUSS
(  536) 	REAL,ALLOCATABLE,DIMENSION(:,:)::TRIAP
(  537) 	REAL,ALLOCATABLE,DIMENSION(:,:,:,:)::VERT
(  538) 	REAL,ALLOCATABLE,DIMENSION(:,:)::INDIC
(  539) 	REAL,ALLOCATABLE,DIMENSION(:,:)::TEMPSQ
(  540) 	REAL,ALLOCATABLE,DIMENSION(:,:)::TEMPSQMAT,TEMPSQMAT2
(  541) 	REAL,ALLOCATABLE,DIMENSION(:,:)::VELLSQ
(  542) 	REAL,ALLOCATABLE,DIMENSION(:,:)::VELINVLSQMAT,VELINVLSQMAT2
(  543) 	REAL,ALLOCATABLE,DIMENSION(:)::WALLCOEFF
(  544) 	REAL,ALLOCATABLE,DIMENSION(:)::WALLCOEFG
(  545) 	INTEGER::G0
(  546) 	INTEGER::K0
(  547) 	REAL,ALLOCATABLE,DIMENSION(:)::VEXT_REF
(  548) END TYPE LOCAL_RECON3
(  549) 
(  550) TYPE(LOCAL_RECON3),ALLOCATABLE,DIMENSION(:)::ILOCAL_RECON3
(  551) TYPE(LOCAL_RECON3),ALLOCATABLE,DIMENSION(:)::ILOCAL_RECON4,ILOCAL_RECON5
(  552) 
(  553) TYPE EXCHANGE_CORD
(  554) 	INTEGER::PROCID
(  555) 	INTEGER::HOWMANY
(  556) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::NODECORD






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 11

(  557) END TYPE EXCHANGE_CORD
(  558) 
(  559) TYPE(EXCHANGE_CORD),ALLOCATABLE,DIMENSION(:)::IEXCORDR
(  560) TYPE(EXCHANGE_CORD),ALLOCATABLE,DIMENSION(:)::IEXCORDS
(  561) 
(  562) 
(  563) TYPE EXCHANGE_SOLHI
(  564) 	INTEGER::PROCID
(  565) 	INTEGER::IAVT
(  566) 	INTEGER::IAVC
(  567) 	INTEGER::FAST
(  568) 	INTEGER::HOWMANY
(  569) 	REAL,ALLOCATABLE,DIMENSION(:,:)::SOL
(  570) END TYPE EXCHANGE_SOLHI
(  571) 
(  572) TYPE(EXCHANGE_SOLHI),ALLOCATABLE,DIMENSION(:)::IEXSOLHIR
(  573) TYPE(EXCHANGE_SOLHI),ALLOCATABLE,DIMENSION(:)::IEXSOLHIS
(  574) 
(  575) 
(  576) 
(  577) TYPE EXCHANGE_BOUNDHI
(  578) 	INTEGER::PROCID
(  579) 	INTEGER::IAVT
(  580) 	INTEGER::FAST
(  581) 	INTEGER::HOWMANY
(  582) 	REAL,ALLOCATABLE,DIMENSION(:,:)::FACESOL
(  583) 	REAL,ALLOCATABLE,DIMENSION(:,:,:,:)::QUADP
(  584) 	integer,allocatable,dimension(:,:)::vertpp
(  585) 	REAL,ALLOCATABLE,DIMENSION(:,:,:,:)::VERT
(  586) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::WQUAD
(  587) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::ANGLES
(  588) 	REAL,ALLOCATABLE,DIMENSION(:,:)::TRIAP
(  589) 	REAL,ALLOCATABLE,DIMENSION(:,:)::NORMALS
(  590) 	REAL,ALLOCATABLE,DIMENSION(:,:,:,:)::FACESOLV
(  591) END TYPE EXCHANGE_BOUNDHI
(  592) 
(  593) TYPE(EXCHANGE_BOUNDHI),ALLOCATABLE,DIMENSION(:)::IEXBOUNDHIR
(  594) TYPE(EXCHANGE_BOUNDHI),ALLOCATABLE,DIMENSION(:)::IEXBOUNDHIS
(  595) TYPE(EXCHANGE_BOUNDHI),ALLOCATABLE,DIMENSION(:)::IEXBOUNDHIRi
(  596) TYPE(EXCHANGE_BOUNDHI),ALLOCATABLE,DIMENSION(:)::IEXBOUNDHIsi
(  597) TYPE(EXCHANGE_BOUNDHI),ALLOCATABLE,DIMENSION(:)::IEXBOUNDHIRR
(  598) TYPE(EXCHANGE_BOUNDHI),ALLOCATABLE,DIMENSION(:)::IEXBOUNDHISS
(  599) 
(  600) 
(  601) TYPE RECON_FACES3
(  602) 	REAL,ALLOCATABLE,DIMENSION(:,:,:)::NEIGH1
(  603) 	REAL,DIMENSION(7)::NONLINEAR
(  604) END TYPE RECON_FACES3
(  605) 
(  606) 
(  607) 
(  608) 
(  609) 
(  610) 
(  611) 
(  612) 
(  613) 
(  614) 






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 12

(  615) TYPE::NODE_NUMBER	!NAME OF TYPE FOR THE SET OF NODES 
(  616) 	INTEGER::NODEN	!IDENTIFICATION NUMBER THAT CAN BE USED AS A POINTER INSIDE AN ARRAY
(  617) 	INTEGER::BLOCKN !BLOCK NUMBER OR CPU NUMBER OF THIS ELEMENT
(  618) 	INTEGER::NODEGL
(  619) 	REAL::X		!COORDINATES IN X AXIS
(  620) 	REAL::Y		!COORDINATES IN Y AXIS
(  621) 	REAL::Z		!COORDINATES IN Z AXIS
(  622) END TYPE NODE_NUMBER 
(  623) 
(  624) 
(  625) TYPE(NODE_NUMBER),ALLOCATABLE,DIMENSION(:,:)::INODE	  !1-D ARRAY FOR POINTER TYPE FOR NODES
(  626) 
(  627) TYPE(NODE_NUMBER)::ITEMP				  !TEMPORARY POINTER NODE ITERATION
(  628) 
(  629) 
(  630) !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
(  631) TYPE::NODE_NE	!NAME OF TYPE FOR THE SET OF NODES 
(  632) 	INTEGER::NUMBEROFNEIB
(  633) 	INTEGER::itor
(  634) 	INTEGER,allocatable,dimension(:)::NEIBIDS
(  635) 	real,allocatable,dimension(:)::cord
(  636) END TYPE NODE_NE
(  637) 
(  638) 
(  639) TYPE(NODE_NE),ALLOCATABLE,DIMENSION(:,:)::INODEN,INODER
(  640) 
(  641) TYPE::NODE_OUT
(  642) 	INTEGER::GLOBAL
(  643) 	INTEGER::NUMBERELEMENTS
(  644) 	INTEGER::TOTAL
(  645) 	INTEGER,ALLOCATABLE,DIMENSION(:)::NUMBEROTHER
(  646) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::WHICHOTHER
(  647) 	REAL,ALLOCATABLE,DIMENSION(:,:)::WEIGHTOTHER
(  648) 	REAL,ALLOCATABLE,DIMENSION(:)::WEIGHTS
(  649) 	REAL::X
(  650) 	REAL::Y
(  651) 	REAL::Z
(  652) 	INTEGER,ALLOCATABLE,DIMENSION(:)::ELEMENTSLOCAL
(  653) END TYPE NODE_OUT
(  654) 
(  655) TYPE(NODE_OUT),ALLOCATABLE,DIMENSION(:,:)::INODEO
(  656) 
(  657) 
(  658) TYPE::ELEM_SHAPE	!NAME OF TYPE FOR THE SET OF NODES 
(  659) 	INTEGER::ISHAPE	!IDENTIFICATION NUMBER THAT CAN BE USED AS A POINTER INSIDE AN ARRAY
(  660) END TYPE ELEM_SHAPE 
(  661) 
(  662) INTEGER,ALLOCATABLE,DIMENSION(:)::IESHAPE	!1-D ARRAY FOR SHAPE OF ELEMENT
(  663) 
(  664) TYPE::EXCHANGE
(  665) 	INTEGER::PROCID					!PROCESSOR ID
(  666) 	INTEGER::TOT
(  667) 	INTEGER,ALLOCATABLE,DIMENSION(:)::WHATTHEYNEED   !ELEMENT NUMBERS
(  668) 	INTEGER,ALLOCATABLE,DIMENSION(:)::MUCHTHEYNEED  !NUMBER OF ELEMENTS THEY NEED
(  669) 	INTEGER,ALLOCATABLE,DIMENSION(:)::MUCHINEED	!NUMBER OF ELEMENTS I NEED
(  670) 	INTEGER,ALLOCATABLE,DIMENSION(:)::WHATINEED	!ELEMENT NUMBER GLOBAL
(  671) 	INTEGER,ALLOCATABLE,DIMENSION(:)::SIDEINEED
(  672) 	INTEGER,ALLOCATABLE,DIMENSION(:)::SIDEINEEDN,QINEED






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 13

(  673) 	INTEGER,ALLOCATABLE,DIMENSION(:)::SIDETHEYNEED,QTHEYNEED
(  674) 	INTEGER,ALLOCATABLE,DIMENSION(:)::SIDETHEYNEEDN
(  675) 	INTEGER,ALLOCATABLE,DIMENSION(:)::LOCALREF
(  676) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::nodex
(  677) END TYPE EXCHANGE
(  678) 
(  679) 
(  680) TYPE(EXCHANGE),ALLOCATABLE,DIMENSION(:)::IEXCHANGER
(  681) TYPE(EXCHANGE),ALLOCATABLE,DIMENSION(:)::IEXCHANGES
(  682) TYPE(EXCHANGE),ALLOCATABLE,DIMENSION(:)::IEXCHANGER1
(  683) TYPE(EXCHANGE),ALLOCATABLE,DIMENSION(:)::IEXCHANGES1
(  684) 
(  685) TYPE::SOLEXCHANGE
(  686) 	INTEGER::PROCID
(  687) 	REAL,ALLOCATABLE,DIMENSION(:,:)::CENTRES
(  688) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::NODES
(  689) 	REAL,ALLOCATABLE,DIMENSION(:,:)::SOL
(  690) END TYPE SOLEXCHANGE
(  691) 
(  692) TYPE(SOLEXCHANGE),ALLOCATABLE,DIMENSION(:)::SOLCHANGER
(  693) 
(  694) TYPE(SOLEXCHANGE),ALLOCATABLE,DIMENSION(:)::SOLCHANGES
(  695) 
(  696) TYPE::RECEX
(  697) 	INTEGER::PROCID					!PROCESSOR ID
(  698) 	INTEGER::TOT
(  699) 	INTEGER,ALLOCATABLE,DIMENSION(:)::WHATTHEYNEED   !ELEMENT NUMBERS
(  700) 	INTEGER,ALLOCATABLE,DIMENSION(:)::MUCHTHEYNEED  !NUMBER OF ELEMENTS THEY NEED
(  701) 	INTEGER,ALLOCATABLE,DIMENSION(:)::MUCHINEED	!NUMBER OF ELEMENTS I NEED
(  702) 	INTEGER,ALLOCATABLE,DIMENSION(:)::WHATINEED	!ELEMENT NUMBER GLOBAL
(  703) 	INTEGER,ALLOCATABLE,DIMENSION(:)::ISHAPE
(  704) 	INTEGER,ALLOCATABLE,DIMENSION(:)::LOCALREF
(  705) 	REAL,ALLOCATABLE,DIMENSION(:,:)::CENTERS
(  706) END TYPE RECEX
(  707) 
(  708) TYPE(RECEX),ALLOCATABLE,DIMENSION(:)::IRECEXR		!RECEIVE ELEMENTS DUE TO STENCILS
(  709) TYPE(RECEX),ALLOCATABLE,DIMENSION(:)::IRECEXR1		!RECEIVE ELEMENTS DUE TO STENCILS
(  710) TYPE(RECEX),ALLOCATABLE,DIMENSION(:)::irecexrg		!RECEIVE ELEMENTS DUE TO STENCILS
(  711) TYPE(RECEX),ALLOCATABLE,DIMENSION(:)::irecexsg		!RECEIVE ELEMENTS DUE TO STENCILS
(  712) TYPE(RECEX),ALLOCATABLE,DIMENSION(:)::IRECEXS1		!RECEIVE ELEMENTS DUE TO STENCILS
(  713) TYPE(RECEX),ALLOCATABLE,DIMENSION(:)::IRECEXS		!SEBD ELEMENTS DUE TO STENCIL
(  714) 
(  715) TYPE::ELEMENT_NUMBER	!NAME OF TYPE FOR THE SET OF ELEMENTS
(  716)         INTEGER::IHEX	!IDENTIFICATION NUMBER THAT CAN BE USED AS A POINTER INSIDE AN ARRAY
(  717) 	INTEGER::IHEXGL
(  718) 	INTEGER::INTERIOR,VDEC,MODE
(  719) 	INTEGER::GGS,idegfree,inumneighbours,nofbc,iorder
(  720) 	INTEGER::ISHAPE
(  721) 	INTEGER::IFCA,dec !possible to remove
(  722) 	INTEGER::ADMIS
(  723) 	INTEGER::hybrid,nonodes,walls
(  724) 	INTEGER,ALLOCATABLE,DIMENSION(:)::NODES,TYPEs_FACES,REORIENT
(  725) 	integer,allocatable,dimension(:)::num_of_wall_gqp
(  726) 	TYPE(FACE_D),ALLOCATABLE,DIMENSION(:)::Q_FACE
(  727) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::NODES_FACES
(  728) 	INTEGER,ALLOCATABLE,DIMENSION(:)::INDEXI
(  729) 	INTEGER,ALLOCATABLE,DIMENSION(:)::ibounds,IBOUNDW
(  730) 	INTEGER,ALLOCATABLE,DIMENSION(:)::INEIGH !NEIGHBOURS	






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 14

(  731) 	INTEGER,ALLOCATABLE,DIMENSION(:)::INEIGHG !NEIGHBOURS
(  732) 	INTEGER,ALLOCATABLE,DIMENSION(:)::INEIGHB !NEIGHBOURS	
(  733) 	INTEGER,ALLOCATABLE,DIMENSION(:)::INEIGHN !NEIGHBOURS	
(  734) 	INTEGER,ALLOCATABLE,DIMENSION(:)::PERCOR	!PERIODIC CORRESPONDING ELEMENT
(  735) 	INTEGER,ALLOCATABLE,DIMENSION(:)::PERCORB	!PERIODIC CORRESPONDING ELEMENT
(  736) 	INTEGER,ALLOCATABLE,DIMENSION(:)::PERCORG	!PERIODIC CORRESPONDING ELEMENT
(  737) 	INTEGER,ALLOCATABLE,DIMENSION(:)::PERCORN	!PERIODIC CORRESPONDING ELEMENT
(  738)  	REAL::TOTVOLUME		!VOLUME OF ELEMENT 
(  739) 	REAL::DTL
(  740)  	REAL::MINEDGE
(  741)  	REAL::WallDist,XXC,YYC,ZZC
(  742) ! 	REAL,allocatable,dimension(:)::ref
(  743) 	REAL,ALLOCATABLE,DIMENSION(:)::FACEANGLEX	!FACEANGLES X,Y
(  744) 	REAL,ALLOCATABLE,DIMENSION(:)::FACEANGLEY	!FACEANGLES X,Y
(  745) 	REAL,ALLOCATABLE,DIMENSION(:)::DIH,vortex,SURF
(  746) END TYPE ELEMENT_NUMBER
(  747) 
(  748) TYPE::FACES
(  749)   INTEGER::ISHAPE
(  750)   INTEGER,ALLOCATABLE,DIMENSION(:)::NEIGHG,NEIGHL
(  751)   INTEGER,ALLOCATABLE,DIMENSION(:)::NODES
(  752) END TYPE FACES
(  753) 
(  754) TYPE(ELEMENT_NUMBER),ALLOCATABLE,DIMENSION(:,:)::IELEM
(  755) TYPE(FACES),ALLOCATABLE,DIMENSION(:,:)::IFACE
(  756) 
(  757) TYPE::ELEMENT_NUMBER2	!NAME OF TYPE FOR THE SET OF ELEMENTS
(  758) 	INTEGER::nbf !4
(  759) 	INTEGER::BLOCKN	!4 !CPU OR BLOCK NUMBER OF THIS ONE
(  760) 	INTEGER::INBCP	!4
(  761) 	INTEGER::IBCTRUE	!BOUNDARY CHECKED (DOUBLE CHECK) 4
(  762) 	INTEGER,ALLOCATABLE,DIMENSION(:)::VERTB	!32
(  763) 	INTEGER,ALLOCATABLE,DIMENSION(:)::IBFACES
(  764) 	REAL,ALLOCATABLE,DIMENSION(:)::SURFAREAS	!32
(  765) 	REAL,ALLOCATABLE,DIMENSION(:,:)::rFACEANGLEX !64	!FACEANGLES X,Y
(  766) 	REAL,ALLOCATABLE,DIMENSION(:,:)::rFACEANGLEY
(  767) END TYPE ELEMENT_NUMBER2
(  768) 	
(  769) TYPE(ELEMENT_NUMBER2),ALLOCATABLE,DIMENSION(:,:)::IELEM2  !1-D ARRAY FOR TYPE FOR ELEMENTS
(  770) 
(  771) TYPE::BOUND_NUMBER	!NAME OF TYPE FOR THE SET OF ELEMENTS
(  772)         INTEGER::ishape,icode,inum,which,face	!IDENTIFICATION NUMBER THAT CAN BE USED AS A POINTER INSIDE AN ARRAY
(  773)         INTEGER,allocatable,dimension(:)::IBl
(  774) 	INTEGER,ALLOCATABLE,DIMENSION(:)::LOCALN,CPUN
(  775) 	CHARACTER(LEN=12)::description
(  776) END TYPE BOUND_NUMBER
(  777) 
(  778) TYPE(BOUND_NUMBER),ALLOCATABLE,DIMENSION(:,:)::IBOUND	  !1-D ARRAY FOR BOUNDARY CONDITION TYPE
(  779) 
(  780) TYPE::CONNX	!NAME OF TYPE FOR THE SET OF ELEMENTS
(  781) 	INTEGER::PROCID	!IDENTIFICATION NUMBER THAT CAN BE USED AS A POINTER INSIDE AN ARRAY
(  782) 	INTEGER,ALLOCATABLE,DIMENSION(:)::HOWMANYI	!IDENTIFICATION NUMBER OF NODE1
(  783) 	INTEGER,ALLOCATABLE,DIMENSION(:)::RETM
(  784) 	INTEGER,ALLOCATABLE,DIMENSION(:)::RET
(  785) 	INTEGER,ALLOCATABLE,DIMENSION(:)::HOWMANYTHEY
(  786) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::WHICHI
(  787) 	INTEGER,ALLOCATABLE,DIMENSION(:,:)::WHICHTHEY
(  788) 	REAL,ALLOCATABLE,DIMENSION(:,:)::FACX






PGF90 (Version    15.10)          03/16/2016  14:41:37      page 15

(  789) END TYPE CONNX
(  790) 
(  791) TYPE(CONNX),ALLOCATABLE,DIMENSION(:)::ICONR
(  792) TYPE(CONNX),ALLOCATABLE,DIMENSION(:)::ICONS
(  793) TYPE(CONNX),ALLOCATABLE,DIMENSION(:)::ICONRPA
(  794) TYPE(CONNX),ALLOCATABLE,DIMENSION(:)::ICONRPM
(  795) TYPE(CONNX),ALLOCATABLE,DIMENSION(:)::ICONSPO
(  796) TYPE(CONNX),ALLOCATABLE,DIMENSION(:)::ICONRPF
(  797) 
(  798) !$OMP THREADPRIVATE(ILOCAL_RECON5)
(  799) 
(  800) 
(  801) 
(  802) 
(  803) 
(  804) END MODULE DECLARATION
